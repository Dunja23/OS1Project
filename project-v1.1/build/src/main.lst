GAS LISTING /tmp/cchgX2IK.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB45:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** 
   2:src/main.cpp  **** #include "../test/printing.hpp"
   3:src/main.cpp  **** #include "../h/riscv.hpp"
   4:src/main.cpp  **** 
   5:src/main.cpp  **** extern void userMain();
   6:src/main.cpp  **** 
   7:src/main.cpp  **** int main()
   8:src/main.cpp  **** {
  12              		.loc 1 8 1
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040102 		addi	s0,sp,32
  21              		.cfi_def_cfa 8, 0
   9:src/main.cpp  **** 
  10:src/main.cpp  ****     TCB *coroutines[2];
  22              		.loc 1 10 5
  11:src/main.cpp  **** 
  12:src/main.cpp  ****     MemoryAllocator::initMem();
  23              		.loc 1 12 5
  24              	.LBB10:
  25              	.LBB11:
  26              		.file 2 "src/../test/../h/memoryAllocator.hpp"
   1:src/../test/../h/memoryAllocator.hpp **** #ifndef PROJECT_V1_1_MEMORYALLOCATOR_HPP
   2:src/../test/../h/memoryAllocator.hpp **** #define PROJECT_V1_1_MEMORYALLOCATOR_HPP
   3:src/../test/../h/memoryAllocator.hpp **** 
   4:src/../test/../h/memoryAllocator.hpp **** #include "../lib/hw.h"
   5:src/../test/../h/memoryAllocator.hpp **** 
   6:src/../test/../h/memoryAllocator.hpp **** struct BlockHeader {
   7:src/../test/../h/memoryAllocator.hpp ****     BlockHeader* next;
   8:src/../test/../h/memoryAllocator.hpp ****     BlockHeader* prev;
   9:src/../test/../h/memoryAllocator.hpp ****     size_t size;
  10:src/../test/../h/memoryAllocator.hpp **** };
  11:src/../test/../h/memoryAllocator.hpp **** 
  12:src/../test/../h/memoryAllocator.hpp **** class MemoryAllocator {
  13:src/../test/../h/memoryAllocator.hpp **** public:
  14:src/../test/../h/memoryAllocator.hpp **** 
  15:src/../test/../h/memoryAllocator.hpp ****     static BlockHeader* freeMemHead;
  16:src/../test/../h/memoryAllocator.hpp ****     static BlockHeader* usedMemHead;
  17:src/../test/../h/memoryAllocator.hpp **** 
  18:src/../test/../h/memoryAllocator.hpp ****     static void initMem() {
  19:src/../test/../h/memoryAllocator.hpp **** 
  20:src/../test/../h/memoryAllocator.hpp ****         freeMemHead = (BlockHeader*)((char*)HEAP_START_ADDR);
GAS LISTING /tmp/cchgX2IK.s 			page 2


  27              		.loc 2 20 9
  28              		.loc 2 20 21 is_stmt 0
  29 0010 97070000 		la	a5,HEAP_START_ADDR
  29      83B70700 
  30 0018 83B70700 		ld	a5,0(a5)
  31 001c 17070000 		la	a4,_ZN15MemoryAllocator11freeMemHeadE
  31      03370700 
  32 0024 2330F700 		sd	a5,0(a4)
  21:src/../test/../h/memoryAllocator.hpp ****         usedMemHead = nullptr;
  33              		.loc 2 21 9 is_stmt 1
  34              		.loc 2 21 21 is_stmt 0
  35 0028 17070000 		la	a4,_ZN15MemoryAllocator11usedMemHeadE
  35      03370700 
  36 0030 23300700 		sd	zero,0(a4)
  22:src/../test/../h/memoryAllocator.hpp ****         freeMemHead->size = ((char*)HEAP_END_ADDR - (char*)HEAP_START_ADDR - sizeof(BlockHeader));
  37              		.loc 2 22 9 is_stmt 1
  38              		.loc 2 22 30 is_stmt 0
  39 0034 17070000 		la	a4,HEAP_END_ADDR
  39      03370700 
  40 003c 03370700 		ld	a4,0(a4)
  41              		.loc 2 22 51
  42 0040 3307F740 		sub	a4,a4,a5
  43              		.loc 2 22 76
  44 0044 130787FE 		addi	a4,a4,-24
  45              		.loc 2 22 27
  46 0048 23B8E700 		sd	a4,16(a5)
  23:src/../test/../h/memoryAllocator.hpp ****         freeMemHead->next = freeMemHead->prev = nullptr;
  47              		.loc 2 23 9 is_stmt 1
  48              		.loc 2 23 47 is_stmt 0
  49 004c 23B40700 		sd	zero,8(a5)
  50              		.loc 2 23 27
  51 0050 23B00700 		sd	zero,0(a5)
  52              	.LBE11:
  53              	.LBE10:
  13:src/main.cpp  **** 
  14:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::vectorTable | 0b01);
  54              		.loc 1 14 5 is_stmt 1
  55              		.loc 1 14 19 is_stmt 0
  56 0054 97070000 		la	a5,_ZN5Riscv11vectorTableEv
  56      83B70700 
  57 005c 93E71700 		ori	a5,a5,1
  58              	.LVL0:
  59              	.LBB12:
  60              	.LBB13:
  61              		.file 3 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** 
   2:src/../h/riscv.hpp **** #ifndef PROJECT_V1_1_RISCV_HPP
   3:src/../h/riscv.hpp **** #define PROJECT_V1_1_RISCV_HPP
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #include "../lib/hw.h"
   6:src/../h/riscv.hpp **** 
   7:src/../h/riscv.hpp **** class Riscv
   8:src/../h/riscv.hpp **** {
   9:src/../h/riscv.hpp **** public:
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  12:src/../h/riscv.hpp ****     static void popSppSpie();
GAS LISTING /tmp/cchgX2IK.s 			page 3


  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // read register scause
  15:src/../h/riscv.hpp ****     static uint64 r_scause();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // write register scause
  18:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // read register sepc
  21:src/../h/riscv.hpp ****     static uint64 r_sepc();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // write register sepc
  24:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // read register stvec
  27:src/../h/riscv.hpp ****     static uint64 r_stvec();
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // write register stvec
  30:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // read register stval
  33:src/../h/riscv.hpp ****     static uint64 r_stval();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // write register stval
  36:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     enum BitMaskSip
  39:src/../h/riscv.hpp ****     {
  40:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  41:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  42:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  43:src/../h/riscv.hpp ****     };
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     // mask set register sip
  48:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     // mask clear register sip
  51:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     // read register sip
  54:src/../h/riscv.hpp ****     static uint64 r_sip();
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     // write register sip
  57:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     enum BitMaskSstatus
  60:src/../h/riscv.hpp ****     {
  61:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  62:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  63:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  64:src/../h/riscv.hpp ****     };
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // mask set register sstatus
  67:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // mask clear register sstatus
GAS LISTING /tmp/cchgX2IK.s 			page 4


  70:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // read register sstatus
  73:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // write register sstatus
  76:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // vector table
  79:src/../h/riscv.hpp ****     static void vectorTable();
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp **** private:
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     static void handleSoftwareInterrupt();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** };
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  92:src/../h/riscv.hpp **** {
  93:src/../h/riscv.hpp ****     uint64 volatile scause;
  94:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  95:src/../h/riscv.hpp ****     return scause;
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  99:src/../h/riscv.hpp **** {
 100:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 101:src/../h/riscv.hpp **** }
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 104:src/../h/riscv.hpp **** {
 105:src/../h/riscv.hpp ****     uint64 volatile sepc;
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 107:src/../h/riscv.hpp ****     return sepc;
 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 116:src/../h/riscv.hpp **** {
 117:src/../h/riscv.hpp ****     uint64 volatile stvec;
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 119:src/../h/riscv.hpp ****     return stvec;
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  62              		.loc 3 124 5 is_stmt 1
  63              		.loc 3 124 69 is_stmt 0
GAS LISTING /tmp/cchgX2IK.s 			page 5


  64              	#APP
  65              	# 124 "src/../h/riscv.hpp" 1
 125              	}
  66              		csrw stvec, a5
  67              	# 0 "" 2
  68              	.LVL1:
  69              	#NO_APP
  70              	.LBE13:
  71              	.LBE12:
  15:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
  72              		.loc 1 15 5 is_stmt 1
  73              	.LBB14:
  74              	.LBB15:
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 128:src/../h/riscv.hpp **** {
 129:src/../h/riscv.hpp ****     uint64 volatile stval;
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 131:src/../h/riscv.hpp ****     return stval;
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 140:src/../h/riscv.hpp **** {
 141:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 142:src/../h/riscv.hpp **** }
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 145:src/../h/riscv.hpp **** {
 146:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 147:src/../h/riscv.hpp **** }
 148:src/../h/riscv.hpp **** 
 149:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 150:src/../h/riscv.hpp **** {
 151:src/../h/riscv.hpp ****     uint64 volatile sip;
 152:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 153:src/../h/riscv.hpp ****     return sip;
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 162:src/../h/riscv.hpp **** {
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  75              		.loc 3 163 5
  76              		.loc 3 163 68 is_stmt 0
  77 0064 93072000 		li	a5,2
  78              	#APP
  79              	# 163 "src/../h/riscv.hpp" 1
 164              	}
GAS LISTING /tmp/cchgX2IK.s 			page 6


  80              		csrs sstatus, a5
  81              	# 0 "" 2
  82              	.LVL2:
  83              	#NO_APP
  84              	.LBE15:
  85              	.LBE14:
  16:src/main.cpp  **** 
  17:src/main.cpp  ****     coroutines[0] = TCB::createThread(nullptr,nullptr);
  86              		.loc 1 17 5 is_stmt 1
  87              		.loc 1 17 38 is_stmt 0
  88 006c 93050000 		li	a1,0
  89 0070 13050000 		li	a0,0
  90 0074 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_@plt
  90      E7800000 
  91              	.LVL3:
  92              		.loc 1 17 19
  93 007c 2330A4FE 		sd	a0,-32(s0)
  18:src/main.cpp  ****     TCB::running = coroutines[0];
  94              		.loc 1 18 5 is_stmt 1
  95              		.loc 1 18 18 is_stmt 0
  96 0080 97070000 		la	a5,_ZN3TCB7runningE
  96      83B70700 
  97 0088 23B0A700 		sd	a0,0(a5)
  19:src/main.cpp  **** 
  20:src/main.cpp  ****     thread_create(&coroutines[1], reinterpret_cast<void (*)(void *)>(userMain), nullptr);
  98              		.loc 1 20 5 is_stmt 1
  99              		.loc 1 20 18 is_stmt 0
 100 008c 13060000 		li	a2,0
 101 0090 97050000 		la	a1,_Z8userMainv
 101      83B50500 
 102 0098 130584FE 		addi	a0,s0,-24
 103 009c 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
 103      E7800000 
 104              	.LVL4:
 105              	.L3:
  21:src/main.cpp  **** 
  22:src/main.cpp  ****     while(!coroutines[1]->isFinished()) {
 106              		.loc 1 22 5 is_stmt 1
 107              		.loc 1 22 11
 108              		.loc 1 22 24 is_stmt 0
 109 00a4 833784FE 		ld	a5,-24(s0)
 110              	.LVL5:
 111              	.LBB16:
 112              	.LBB17:
 113              		.file 4 "src/../test/../h/tcb.hpp"
   1:src/../test/../h/tcb.hpp **** 
   2:src/../test/../h/tcb.hpp **** #ifndef PROJECT_V1_1_TCB_HPP
   3:src/../test/../h/tcb.hpp **** #define PROJECT_V1_1_TCB_HPP
   4:src/../test/../h/tcb.hpp **** 
   5:src/../test/../h/tcb.hpp **** #include "../lib/hw.h"
   6:src/../test/../h/tcb.hpp **** #include "scheduler.hpp"
   7:src/../test/../h/tcb.hpp **** #include "memoryAllocator.hpp"
   8:src/../test/../h/tcb.hpp **** 
   9:src/../test/../h/tcb.hpp **** 
  10:src/../test/../h/tcb.hpp **** class TCB
  11:src/../test/../h/tcb.hpp **** {
  12:src/../test/../h/tcb.hpp **** public:
GAS LISTING /tmp/cchgX2IK.s 			page 7


  13:src/../test/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  14:src/../test/../h/tcb.hpp **** 
  15:src/../test/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 114              		.loc 4 15 31 is_stmt 1
 115              		.loc 4 15 38 is_stmt 0
 116 00a8 83C70702 		lbu	a5,32(a5)
 117              	.LVL6:
 118              	.LBE17:
 119              	.LBE16:
 120              		.loc 1 22 11
 121 00ac 63980700 		bnez	a5,.L2
  23:src/main.cpp  ****         thread_dispatch();
 122              		.loc 1 23 9 is_stmt 1
 123              		.loc 1 23 24 is_stmt 0
 124 00b0 97000000 		call	_Z15thread_dispatchv@plt
 124      E7800000 
 125              	.LVL7:
 126 00b8 6FF0DFFE 		j	.L3
 127              	.L2:
  24:src/main.cpp  ****     }
  25:src/main.cpp  **** 
  26:src/main.cpp  ****     return 0;
 128              		.loc 1 26 5 is_stmt 1
  27:src/main.cpp  **** }
 129              		.loc 1 27 1 is_stmt 0
 130 00bc 13050000 		li	a0,0
 131 00c0 83308101 		ld	ra,24(sp)
 132              		.cfi_restore 1
 133 00c4 03340101 		ld	s0,16(sp)
 134              		.cfi_restore 8
 135              		.cfi_def_cfa 2, 32
 136 00c8 13010102 		addi	sp,sp,32
 137              		.cfi_def_cfa_offset 0
 138 00cc 67800000 		jr	ra
 139              		.cfi_endproc
 140              	.LFE45:
 142              	.Letext0:
 143              		.file 5 "src/../test/../h/../lib/hw.h"
 144              		.file 6 "src/../test/../h/syscall_c.hpp"
GAS LISTING /tmp/cchgX2IK.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cchgX2IK.s:9      .text:0000000000000000 main
     /tmp/cchgX2IK.s:13     .text:0000000000000000 .L0 
     /tmp/cchgX2IK.s:14     .text:0000000000000000 .L0 
     /tmp/cchgX2IK.s:15     .text:0000000000000004 .L0 
     /tmp/cchgX2IK.s:18     .text:000000000000000c .L0 
     /tmp/cchgX2IK.s:19     .text:000000000000000c .L0 
     /tmp/cchgX2IK.s:21     .text:0000000000000010 .L0 
     /tmp/cchgX2IK.s:23     .text:0000000000000010 .L0 
     /tmp/cchgX2IK.s:27     .text:0000000000000010 .L0 
     /tmp/cchgX2IK.s:28     .text:0000000000000010 .L0 
     /tmp/cchgX2IK.s:29     .text:0000000000000010 .L0 
     /tmp/cchgX2IK.s:34     .text:0000000000000028 .L0 
     /tmp/cchgX2IK.s:35     .text:0000000000000028 .L0 
     /tmp/cchgX2IK.s:38     .text:0000000000000034 .L0 
     /tmp/cchgX2IK.s:39     .text:0000000000000034 .L0 
     /tmp/cchgX2IK.s:42     .text:0000000000000040 .L0 
     /tmp/cchgX2IK.s:44     .text:0000000000000044 .L0 
     /tmp/cchgX2IK.s:46     .text:0000000000000048 .L0 
     /tmp/cchgX2IK.s:48     .text:000000000000004c .L0 
     /tmp/cchgX2IK.s:49     .text:000000000000004c .L0 
     /tmp/cchgX2IK.s:51     .text:0000000000000050 .L0 
     /tmp/cchgX2IK.s:55     .text:0000000000000054 .L0 
     /tmp/cchgX2IK.s:56     .text:0000000000000054 .L0 
     /tmp/cchgX2IK.s:63     .text:0000000000000060 .L0 
  src/../h/riscv.hpp:124    .text:0000000000000060 .L0 
     /tmp/cchgX2IK.s:75     .text:0000000000000064 .L0 
     /tmp/cchgX2IK.s:76     .text:0000000000000064 .L0 
     /tmp/cchgX2IK.s:77     .text:0000000000000064 .L0 
     /tmp/cchgX2IK.s:87     .text:000000000000006c .L0 
     /tmp/cchgX2IK.s:88     .text:000000000000006c .L0 
     /tmp/cchgX2IK.s:93     .text:000000000000007c .L0 
     /tmp/cchgX2IK.s:95     .text:0000000000000080 .L0 
     /tmp/cchgX2IK.s:96     .text:0000000000000080 .L0 
     /tmp/cchgX2IK.s:99     .text:000000000000008c .L0 
     /tmp/cchgX2IK.s:100    .text:000000000000008c .L0 
     /tmp/cchgX2IK.s:107    .text:00000000000000a4 .L0 
     /tmp/cchgX2IK.s:108    .text:00000000000000a4 .L0 
     /tmp/cchgX2IK.s:109    .text:00000000000000a4 .L0 
     /tmp/cchgX2IK.s:115    .text:00000000000000a8 .L0 
     /tmp/cchgX2IK.s:116    .text:00000000000000a8 .L0 
     /tmp/cchgX2IK.s:121    .text:00000000000000ac .L0 
     /tmp/cchgX2IK.s:123    .text:00000000000000b0 .L0 
     /tmp/cchgX2IK.s:124    .text:00000000000000b0 .L0 
     /tmp/cchgX2IK.s:129    .text:00000000000000bc .L0 
     /tmp/cchgX2IK.s:130    .text:00000000000000bc .L0 
     /tmp/cchgX2IK.s:132    .text:00000000000000c4 .L0 
     /tmp/cchgX2IK.s:134    .text:00000000000000c8 .L0 
     /tmp/cchgX2IK.s:135    .text:00000000000000c8 .L0 
     /tmp/cchgX2IK.s:137    .text:00000000000000cc .L0 
     /tmp/cchgX2IK.s:139    .text:00000000000000d0 .L0 
     /tmp/cchgX2IK.s:145    .text:00000000000000d0 .L0 
     /tmp/cchgX2IK.s:29     .text:0000000000000010 .L0 
     /tmp/cchgX2IK.s:31     .text:000000000000001c .L0 
     /tmp/cchgX2IK.s:35     .text:0000000000000028 .L0 
     /tmp/cchgX2IK.s:39     .text:0000000000000034 .L0 
GAS LISTING /tmp/cchgX2IK.s 			page 9


     /tmp/cchgX2IK.s:56     .text:0000000000000054 .L0 
     /tmp/cchgX2IK.s:96     .text:0000000000000080 .L0 
     /tmp/cchgX2IK.s:101    .text:0000000000000090 .L0 
     /tmp/cchgX2IK.s:127    .text:00000000000000bc .L2
     /tmp/cchgX2IK.s:105    .text:00000000000000a4 .L3
     /tmp/cchgX2IK.s:1141   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cchgX2IK.s:2230   .debug_str:000000000000074b .LASF133
     /tmp/cchgX2IK.s:2070   .debug_str:000000000000025b .LASF134
     /tmp/cchgX2IK.s:2156   .debug_str:000000000000053a .LASF135
     /tmp/cchgX2IK.s:5      .text:0000000000000000 .Ltext0
     /tmp/cchgX2IK.s:142    .text:00000000000000d0 .Letext0
     /tmp/cchgX2IK.s:1992   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cchgX2IK.s:2092   .debug_str:0000000000000318 .LASF0
     /tmp/cchgX2IK.s:2112   .debug_str:00000000000003a7 .LASF1
     /tmp/cchgX2IK.s:2178   .debug_str:00000000000005e9 .LASF2
     /tmp/cchgX2IK.s:2188   .debug_str:000000000000062e .LASF4
     /tmp/cchgX2IK.s:2100   .debug_str:0000000000000349 .LASF3
     /tmp/cchgX2IK.s:2002   .debug_str:000000000000004f .LASF5
     /tmp/cchgX2IK.s:2168   .debug_str:00000000000005a6 .LASF6
     /tmp/cchgX2IK.s:2106   .debug_str:000000000000037c .LASF7
     /tmp/cchgX2IK.s:2076   .debug_str:0000000000000281 .LASF8
     /tmp/cchgX2IK.s:2082   .debug_str:00000000000002c3 .LASF9
     /tmp/cchgX2IK.s:2022   .debug_str:00000000000000fd .LASF10
     /tmp/cchgX2IK.s:2068   .debug_str:000000000000024c .LASF11
     /tmp/cchgX2IK.s:2036   .debug_str:0000000000000161 .LASF12
     /tmp/cchgX2IK.s:2020   .debug_str:00000000000000ed .LASF13
     /tmp/cchgX2IK.s:2212   .debug_str:00000000000006e0 .LASF14
     /tmp/cchgX2IK.s:2060   .debug_str:0000000000000205 .LASF15
     /tmp/cchgX2IK.s:2204   .debug_str:00000000000006a2 .LASF16
     /tmp/cchgX2IK.s:2198   .debug_str:0000000000000673 .LASF27
     /tmp/cchgX2IK.s:2024   .debug_str:000000000000010c .LASF17
     /tmp/cchgX2IK.s:2010   .debug_str:0000000000000094 .LASF18
     /tmp/cchgX2IK.s:2110   .debug_str:00000000000003a2 .LASF19
     /tmp/cchgX2IK.s:2154   .debug_str:000000000000052a .LASF26
     /tmp/cchgX2IK.s:2172   .debug_str:00000000000005c9 .LASF20
     /tmp/cchgX2IK.s:2248   .debug_str:0000000000000897 .LASF21
     /tmp/cchgX2IK.s:2130   .debug_str:000000000000042e .LASF81
     /tmp/cchgX2IK.s:2196   .debug_str:0000000000000654 .LASF83
     /tmp/cchgX2IK.s:2126   .debug_str:0000000000000403 .LASF22
     /tmp/cchgX2IK.s:2006   .debug_str:0000000000000061 .LASF24
     /tmp/cchgX2IK.s:2216   .debug_str:0000000000000701 .LASF23
     /tmp/cchgX2IK.s:2128   .debug_str:000000000000040d .LASF25
     /tmp/cchgX2IK.s:2098   .debug_str:000000000000033f .LASF68
     /tmp/cchgX2IK.s:2152   .debug_str:00000000000004fc .LASF70
     /tmp/cchgX2IK.s:2028   .debug_str:0000000000000124 .LASF28
     /tmp/cchgX2IK.s:2190   .debug_str:0000000000000635 .LASF29
     /tmp/cchgX2IK.s:2000   .debug_str:0000000000000043 .LASF30
     /tmp/cchgX2IK.s:2218   .debug_str:000000000000070a .LASF33
     /tmp/cchgX2IK.s:2134   .debug_str:000000000000045a .LASF35
     /tmp/cchgX2IK.s:2012   .debug_str:0000000000000099 .LASF31
     /tmp/cchgX2IK.s:2240   .debug_str:0000000000000849 .LASF32
     /tmp/cchgX2IK.s:2180   .debug_str:00000000000005f7 .LASF34
     /tmp/cchgX2IK.s:2018   .debug_str:00000000000000d8 .LASF36
     /tmp/cchgX2IK.s:2222   .debug_str:0000000000000721 .LASF37
     /tmp/cchgX2IK.s:2066   .debug_str:0000000000000236 .LASF38
     /tmp/cchgX2IK.s:2042   .debug_str:0000000000000196 .LASF39
     /tmp/cchgX2IK.s:2260   .debug_str:00000000000008d3 .LASF40
GAS LISTING /tmp/cchgX2IK.s 			page 10


     /tmp/cchgX2IK.s:2256   .debug_str:00000000000008b8 .LASF41
     /tmp/cchgX2IK.s:2046   .debug_str:00000000000001a9 .LASF42
     /tmp/cchgX2IK.s:2274   .debug_str:000000000000091d .LASF43
     /tmp/cchgX2IK.s:2032   .debug_str:000000000000013f .LASF44
     /tmp/cchgX2IK.s:2234   .debug_str:0000000000000823 .LASF45
     /tmp/cchgX2IK.s:2080   .debug_str:00000000000002af .LASF46
     /tmp/cchgX2IK.s:2184   .debug_str:0000000000000619 .LASF47
     /tmp/cchgX2IK.s:1994   .debug_str:0000000000000000 .LASF48
     /tmp/cchgX2IK.s:2104   .debug_str:000000000000036d .LASF49
     /tmp/cchgX2IK.s:2200   .debug_str:000000000000067f .LASF50
     /tmp/cchgX2IK.s:2088   .debug_str:00000000000002f4 .LASF51
     /tmp/cchgX2IK.s:2142   .debug_str:00000000000004a2 .LASF52
     /tmp/cchgX2IK.s:2210   .debug_str:00000000000006d3 .LASF53
     /tmp/cchgX2IK.s:2246   .debug_str:0000000000000877 .LASF54
     /tmp/cchgX2IK.s:2150   .debug_str:00000000000004f7 .LASF136
     /tmp/cchgX2IK.s:2058   .debug_str:00000000000001fa .LASF55
     /tmp/cchgX2IK.s:2078   .debug_str:0000000000000291 .LASF56
     /tmp/cchgX2IK.s:2268   .debug_str:000000000000090c .LASF58
     /tmp/cchgX2IK.s:2102   .debug_str:000000000000035b .LASF86
     /tmp/cchgX2IK.s:2226   .debug_str:0000000000000736 .LASF57
     /tmp/cchgX2IK.s:2232   .debug_str:000000000000080f .LASF137
     /tmp/cchgX2IK.s:1996   .debug_str:0000000000000016 .LASF59
     /tmp/cchgX2IK.s:2270   .debug_str:0000000000000912 .LASF60
     /tmp/cchgX2IK.s:2236   .debug_str:000000000000082c .LASF61
     /tmp/cchgX2IK.s:2202   .debug_str:0000000000000699 .LASF62
     /tmp/cchgX2IK.s:2144   .debug_str:00000000000004b9 .LASF63
     /tmp/cchgX2IK.s:2272   .debug_str:0000000000000918 .LASF64
     /tmp/cchgX2IK.s:2052   .debug_str:00000000000001d5 .LASF138
     /tmp/cchgX2IK.s:2158   .debug_str:0000000000000558 .LASF65
     /tmp/cchgX2IK.s:2266   .debug_str:0000000000000903 .LASF66
     /tmp/cchgX2IK.s:2116   .debug_str:00000000000003d3 .LASF67
     /tmp/cchgX2IK.s:2016   .debug_str:00000000000000ca .LASF72
     /tmp/cchgX2IK.s:2114   .debug_str:00000000000003ba .LASF74
     /tmp/cchgX2IK.s:2038   .debug_str:0000000000000171 .LASF69
     /tmp/cchgX2IK.s:1998   .debug_str:000000000000001b .LASF71
     /tmp/cchgX2IK.s:2050   .debug_str:00000000000001cc .LASF73
     /tmp/cchgX2IK.s:2030   .debug_str:000000000000012c .LASF75
     /tmp/cchgX2IK.s:2186   .debug_str:0000000000000623 .LASF139
     /tmp/cchgX2IK.s:2122   .debug_str:00000000000003e8 .LASF76
     /tmp/cchgX2IK.s:2254   .debug_str:00000000000008b2 .LASF77
     /tmp/cchgX2IK.s:2062   .debug_str:000000000000021b .LASF140
     /tmp/cchgX2IK.s:2064   .debug_str:000000000000022a .LASF78
     /tmp/cchgX2IK.s:2228   .debug_str:000000000000073e .LASF79
     /tmp/cchgX2IK.s:2044   .debug_str:000000000000019d .LASF80
     /tmp/cchgX2IK.s:2086   .debug_str:00000000000002e9 .LASF82
     /tmp/cchgX2IK.s:2090   .debug_str:0000000000000300 .LASF84
     /tmp/cchgX2IK.s:2242   .debug_str:0000000000000860 .LASF88
     /tmp/cchgX2IK.s:2238   .debug_str:0000000000000834 .LASF90
     /tmp/cchgX2IK.s:2174   .debug_str:00000000000005d5 .LASF85
     /tmp/cchgX2IK.s:2146   .debug_str:00000000000004c1 .LASF87
     /tmp/cchgX2IK.s:2162   .debug_str:0000000000000578 .LASF89
     /tmp/cchgX2IK.s:2164   .debug_str:000000000000057f .LASF91
     /tmp/cchgX2IK.s:2138   .debug_str:0000000000000479 .LASF92
     /tmp/cchgX2IK.s:2108   .debug_str:000000000000038f .LASF93
     /tmp/cchgX2IK.s:2262   .debug_str:00000000000008e5 .LASF94
     /tmp/cchgX2IK.s:2208   .debug_str:00000000000006bf .LASF95
     /tmp/cchgX2IK.s:2136   .debug_str:0000000000000471 .LASF96
GAS LISTING /tmp/cchgX2IK.s 			page 11


     /tmp/cchgX2IK.s:2072   .debug_str:0000000000000268 .LASF97
     /tmp/cchgX2IK.s:2118   .debug_str:00000000000003da .LASF98
     /tmp/cchgX2IK.s:2166   .debug_str:0000000000000592 .LASF99
     /tmp/cchgX2IK.s:2276   .debug_str:0000000000000928 .LASF100
     /tmp/cchgX2IK.s:2096   .debug_str:000000000000032b .LASF101
     /tmp/cchgX2IK.s:2206   .debug_str:00000000000006b8 .LASF102
     /tmp/cchgX2IK.s:2192   .debug_str:000000000000063a .LASF103
     /tmp/cchgX2IK.s:2194   .debug_str:000000000000064d .LASF104
     /tmp/cchgX2IK.s:2026   .debug_str:0000000000000111 .LASF105
     /tmp/cchgX2IK.s:2056   .debug_str:00000000000001f4 .LASF106
     /tmp/cchgX2IK.s:2008   .debug_str:0000000000000082 .LASF107
     /tmp/cchgX2IK.s:2094   .debug_str:0000000000000325 .LASF108
     /tmp/cchgX2IK.s:2048   .debug_str:00000000000001ba .LASF109
     /tmp/cchgX2IK.s:2004   .debug_str:0000000000000056 .LASF110
     /tmp/cchgX2IK.s:2182   .debug_str:0000000000000601 .LASF111
     /tmp/cchgX2IK.s:2176   .debug_str:00000000000005de .LASF112
     /tmp/cchgX2IK.s:2054   .debug_str:00000000000001dc .LASF113
     /tmp/cchgX2IK.s:2224   .debug_str:000000000000072c .LASF114
     /tmp/cchgX2IK.s:2264   .debug_str:00000000000008ed .LASF115
     /tmp/cchgX2IK.s:2252   .debug_str:00000000000008a8 .LASF116
     /tmp/cchgX2IK.s:2124   .debug_str:00000000000003ed .LASF117
     /tmp/cchgX2IK.s:2220   .debug_str:0000000000000715 .LASF118
     /tmp/cchgX2IK.s:2160   .debug_str:000000000000055f .LASF119
     /tmp/cchgX2IK.s:2084   .debug_str:00000000000002d1 .LASF120
     /tmp/cchgX2IK.s:2014   .debug_str:00000000000000a5 .LASF121
     /tmp/cchgX2IK.s:2214   .debug_str:00000000000006ec .LASF122
     /tmp/cchgX2IK.s:2140   .debug_str:0000000000000480 .LASF123
     /tmp/cchgX2IK.s:2040   .debug_str:000000000000017f .LASF124
     /tmp/cchgX2IK.s:2132   .debug_str:0000000000000436 .LASF125
     /tmp/cchgX2IK.s:10     .text:0000000000000000 .LFB45
     /tmp/cchgX2IK.s:140    .text:00000000000000d0 .LFE45
     /tmp/cchgX2IK.s:2034   .debug_str:0000000000000156 .LASF126
     /tmp/cchgX2IK.s:24     .text:0000000000000010 .LBB10
     /tmp/cchgX2IK.s:53     .text:0000000000000054 .LBE10
     /tmp/cchgX2IK.s:59     .text:0000000000000060 .LBB12
     /tmp/cchgX2IK.s:71     .text:0000000000000064 .LBE12
     /tmp/cchgX2IK.s:1957   .debug_loc:0000000000000000 .LLST0
     /tmp/cchgX2IK.s:73     .text:0000000000000064 .LBB14
     /tmp/cchgX2IK.s:85     .text:000000000000006c .LBE14
     /tmp/cchgX2IK.s:1964   .debug_loc:0000000000000023 .LLST1
     /tmp/cchgX2IK.s:111    .text:00000000000000a8 .LBB16
     /tmp/cchgX2IK.s:119    .text:00000000000000ac .LBE16
     /tmp/cchgX2IK.s:1972   .debug_loc:0000000000000047 .LLST2
     /tmp/cchgX2IK.s:91     .text:000000000000007c .LVL3
     /tmp/cchgX2IK.s:104    .text:00000000000000a4 .LVL4
     /tmp/cchgX2IK.s:125    .text:00000000000000b8 .LVL7
     /tmp/cchgX2IK.s:2250   .debug_str:00000000000008a3 .LASF127
     /tmp/cchgX2IK.s:2120   .debug_str:00000000000003e2 .LASF128
     /tmp/cchgX2IK.s:2074   .debug_str:000000000000027c .LASF141
     /tmp/cchgX2IK.s:2148   .debug_str:00000000000004d6 .LASF129
     /tmp/cchgX2IK.s:2244   .debug_str:0000000000000869 .LASF131
     /tmp/cchgX2IK.s:2258   .debug_str:00000000000008be .LASF130
     /tmp/cchgX2IK.s:2170   .debug_str:00000000000005b9 .LASF132
     /tmp/cchgX2IK.s:58     .text:0000000000000060 .LVL0
     /tmp/cchgX2IK.s:68     .text:0000000000000064 .LVL1
     /tmp/cchgX2IK.s:82     .text:000000000000006c .LVL2
     /tmp/cchgX2IK.s:110    .text:00000000000000a8 .LVL5
GAS LISTING /tmp/cchgX2IK.s 			page 12


     /tmp/cchgX2IK.s:117    .text:00000000000000ac .LVL6
     /tmp/cchgX2IK.s:146    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
HEAP_START_ADDR
_ZN15MemoryAllocator11freeMemHeadE
_ZN15MemoryAllocator11usedMemHeadE
HEAP_END_ADDR
_ZN5Riscv11vectorTableEv
_ZN3TCB12createThreadEPFvPvES0_
_ZN3TCB7runningE
_Z8userMainv
_Z13thread_createPP3TCBPFvPvES2_
_Z15thread_dispatchv
